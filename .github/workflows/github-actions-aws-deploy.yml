name: AWS Deploy
run-name: Deploying to AWS

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  id-token: write   # This is required for requesting the JWT

jobs:
  terraform-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_DEPLOY }}/GithubActionsRole
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform format checking
        run: terraform fmt -check

  terraform-plan:
    runs-on: ubuntu-latest
    needs: terraform-check   # Wait for terraform-check job to finish
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_DEPLOY }}/GithubActionsRole
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init
        run: terraform init -backend-config="bucket=${{ secrets.AWS_BACKEND_S3 }}" -backend-config="region=${{ secrets.AWS_REGION }}"

      - name: Terraform plan
        env:
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
          TF_VAR_aws_sample_bucket_name: ${{ secrets.AWS_SAMPLE_BUCKET }}
        run: terraform plan

  terraform-apply:
    runs-on: ubuntu-latest
    needs: terraform-plan   # Wait for terraform-plan job to finish
    if: github.event_name == 'push'   # Only apply on push to main, not pull request
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_DEPLOY }}/GithubActionsRole
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init
        run: terraform init -backend-config="bucket=${{ secrets.AWS_BACKEND_S3 }}" -backend-config="region=${{ secrets.AWS_REGION }}"

      - name: Terraform apply
        env:
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
          TF_VAR_aws_sample_bucket_name: ${{ secrets.AWS_SAMPLE_BUCKET }}
        run: terraform apply -auto-approve
